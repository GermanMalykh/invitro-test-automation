plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
    id 'io.freefair.lombok' version '8.14'
}

group 'invitro.autotest'
version '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

def junit5Version = '5.13.4'
def selenideVersion = '7.10.0'
def slf4jVersion = '2.0.17'
def allureVersion = '2.29.0'
def assertjVersion = '3.27.4'
def annotationsVersion = '24.0.1'
def restAssuredVersion = '5.5.5'
def jacksonVersion = '2.19.2'
def dataFakerVersion = '2.4.4'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:${junit5Version}",
            "com.codeborne:selenide:${selenideVersion}",
            "com.codeborne:selenide-appium:${selenideVersion}",
            "io.qameta.allure:allure-junit5:${allureVersion}",
            "io.qameta.allure:allure-selenide:${allureVersion}",
            "io.qameta.allure:allure-rest-assured:${allureVersion}",
            "org.assertj:assertj-core:${assertjVersion}",
            "org.jetbrains:annotations:${annotationsVersion}",
            "io.rest-assured:rest-assured:${restAssuredVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "net.datafaker:datafaker:${dataFakerVersion}"
    )
    testRuntimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "Gradle", gradle.gradleVersion
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('api', Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}

tasks.register('web', Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}